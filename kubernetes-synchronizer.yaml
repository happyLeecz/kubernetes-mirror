---
kind: ConfigMap
apiVersion: v1
metadata:
  name: kubernetes-synchronizer
  namespace: kube-system
data:
  ConfigMap: ConfigMap
  Namespace: Namespace
  Node: Node
  PersistentVolumeClaim: PersistentVolumeClaim
  PersistentVolume: PersistentVolume
  Pod: Pod
  ReplicationController: ReplicationController
  Secret: Secret
  ServiceAccount: ServiceAccount
  CustomResourceDefinition: CustomResourceDefinition
  DaemonSet: DaemonSet
  Deployment: Deployment
  ReplicaSet: ReplicaSet
  StatefulSet: StatefulSet
  CronJob: CronJob
  Job: Job
  NetworkPolicy: NetworkPolicy
  Ingress: Ingress
  ClusterRoleBinding: ClusterRoleBinding
  ClusterRole: ClusterRole
  RoleBinding: RoleBinding
  Role: Role
  StorageClass: StorageClass
  Service: Service
--- 
apiVersion: "apps/v1"
kind: "Deployment"
metadata: 
  name: "kubernetes-synchronizer"
  namespace: "kube-system"
  labels: 
    name: "kubernetes-synchronizer"
spec: 
  replicas: 1
  selector: 
    matchLabels:
      name: "kubernetes-synchronizer"
  template: 
    metadata: 
      labels: 
        name: "kubernetes-synchronizer"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: "kubernetes-synchronizer"
        image: "registry.cn-beijing.aliyuncs.com/kubesys/kubernetes-synchronizer:v0.1-amd64"
        imagePullPolicy: "IfNotPresent"
        command: 
        - "java"
        - "-jar"
        - "kubernetes-synchronizer.jar"
        env:
        - name: URL
          value: https://192.168.42.206:6443
        - name: TOKEN
          value: eyJhbGciOiJSUzI1NiIsImtpZCI6InJoRzEwa2xVWjU4TGxHN1YzR085TUdUYmM1U0RnTUtfSnBmT3FyeE12a0UifQ.eyJpc3MiOiJrdWJlcm5ldGVzL3NlcnZpY2VhY2NvdW50Iiwia3ViZXJuZXRlcy5pby9zZXJ2aWNlYWNjb3VudC9uYW1lc3BhY2UiOiJrdWJlLXN5c3RlbSIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VjcmV0Lm5hbWUiOiJrdWJlcm5ldGVzLWNsaWVudC10b2tlbi1wdHA2ZiIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50Lm5hbWUiOiJrdWJlcm5ldGVzLWNsaWVudCIsImt1YmVybmV0ZXMuaW8vc2VydmljZWFjY291bnQvc2VydmljZS1hY2NvdW50LnVpZCI6IjQ1MmNjODMxLWNkZTEtNDA2OC05MDgxLWE0ZDU4ODRiNWU0OSIsInN1YiI6InN5c3RlbTpzZXJ2aWNlYWNjb3VudDprdWJlLXN5c3RlbTprdWJlcm5ldGVzLWNsaWVudCJ9.dvoNqw7Eq2mhGozvLdT1i1N-NhIMI9d0uuMlU2FEUoY_i8vb4YaePutXyPRnywadsvldOK68nwKABZ6iqOGfygT7PC4sye8pqxOHF_Hu5w6qAnP3MZHqIxlKPkxi5l8J1-Wle6nznnQPNPZsxY8wEGplqAcLXfvs4ti-fThA6ZMz7v6yBjuPpdGe3ron_zWyV0AEEX7pkI35lGsmp1-Fh_S9Vax8Q9l-gbxF95VfJ9BUvZb_Po9O8E--O7FeapeDwzELNLJVb0J9ZTjXIZ-TV6CubG5XAM_5UrCNkL4hUntcrhE1ShoJnuvvMP0jnZr9w0Y3OM4zzUYB4pIHpRnG6g
        volumeMounts: 
        - name: "kubetoken"
          mountPath: "/etc/kubernetes"
      volumes: 
      - name: "kubetoken"
        hostPath:
          path: "/etc/kubernetes"
--- 
--- 
apiVersion: "apps/v1"
kind: "Deployment"
metadata: 
  name: "kube-database"
  namespace: "kube-system"
  labels: 
    name: "kube-database"
spec: 
  replicas: 1
  selector: 
    matchLabels:
      name: "kube-database"
  template: 
    metadata: 
      labels: 
        name: "kube-database"
    spec:
      nodeSelector:
        node-role.kubernetes.io/master: ""
      tolerations:
        - key: node-role.kubernetes.io/master
          effect: NoSchedule
      containers:
      - name: "mariadb"
        image: "mariadb:10.5.2"
        imagePullPolicy: "IfNotPresent"
        ports:
        - containerPort: 3306
        env:
        - name: "MYSQL_ROOT_PASSWORD"
          value: "onceas"
        volumeMounts:
        - name: "mysqldata"
          mountPath: "/var/lib/mysql"
      - name: "adminer"
        image: "adminer:4.7.6-standalone"
        imagePullPolicy: "IfNotPresent"
        ports: 
        - containerPort: 8080
      volumes: 
      - name: "mysqldata"
        hostPath:
          path: "/var/lib/mysql"
---
apiVersion: v1
kind: Service
metadata:
  name: kube-database
  namespace: kube-system
  labels: 
    name: kube-database
spec:
  type: NodePort
  ports:
  - port: 3306
    protocol: TCP
    targetPort: 3306
    name: mysql-port
    nodePort: 32306
  - port: 8080
    protocol: TCP
    targetPort: 8080
    name: adminer-port
    nodePort: 32080
  selector:
    name: kube-database
